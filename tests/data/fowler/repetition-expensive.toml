# !!! DO NOT EDIT !!!
# Automatically generated by scripts/fowler-to-toml.
# Numbers in the test names correspond to the line number of the test from
# the original dat file.

[[tests]]
name = "repetition-expensive15"
regex = '''X(.?){0,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive16"
regex = '''X(.?){1,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive17"
regex = '''X(.?){2,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive18"
regex = '''X(.?){3,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive19"
regex = '''X(.?){4,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive20"
regex = '''X(.?){5,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive21"
regex = '''X(.?){6,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive22"
regex = '''X(.?){7,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [7, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive23"
regex = '''X(.?){8,}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive25"
regex = '''X(.?){0,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive27"
regex = '''X(.?){1,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive29"
regex = '''X(.?){2,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive31"
regex = '''X(.?){3,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive33"
regex = '''X(.?){4,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive35"
regex = '''X(.?){5,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive37"
regex = '''X(.?){6,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive39"
regex = '''X(.?){7,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

[[tests]]
name = "repetition-expensive40"
regex = '''X(.?){8,8}Y'''
input = '''X1234567Y'''
captures = [[[0, 9], [8, 8]]]
match_limit = 1

# Test added by Rust regex project.
[[tests]]
name = "repetition-expensive52"
regex = '''(a|ab|c|bcd){0,}(d*)'''
input = '''ababcd'''
captures = [[[0, 1], [0, 1], [1, 1]]]
match_limit = 1

# Test added by Rust regex project.
[[tests]]
name = "repetition-expensive54"
regex = '''(a|ab|c|bcd){1,}(d*)'''
input = '''ababcd'''
captures = [[[0, 1], [0, 1], [1, 1]]]
match_limit = 1

[[tests]]
name = "repetition-expensive55"
regex = '''(a|ab|c|bcd){2,}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [3, 6], [6, 6]]]
match_limit = 1

[[tests]]
name = "repetition-expensive56"
regex = '''(a|ab|c|bcd){3,}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [3, 6], [6, 6]]]
match_limit = 1

[[tests]]
name = "repetition-expensive57"
regex = '''(a|ab|c|bcd){4,}(d*)'''
input = '''ababcd'''
captures = []
match_limit = 1

# Test added by Rust regex project.
[[tests]]
name = "repetition-expensive59"
regex = '''(a|ab|c|bcd){0,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 1], [0, 1], [1, 1]]]
match_limit = 1

# Test added by Rust regex project.
[[tests]]
name = "repetition-expensive61"
regex = '''(a|ab|c|bcd){1,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 1], [0, 1], [1, 1]]]
match_limit = 1

[[tests]]
name = "repetition-expensive62"
regex = '''(a|ab|c|bcd){2,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [3, 6], [6, 6]]]
match_limit = 1

[[tests]]
name = "repetition-expensive63"
regex = '''(a|ab|c|bcd){3,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [3, 6], [6, 6]]]
match_limit = 1

[[tests]]
name = "repetition-expensive64"
regex = '''(a|ab|c|bcd){4,10}(d*)'''
input = '''ababcd'''
captures = []
match_limit = 1

# Test added by Rust regex project.
[[tests]]
name = "repetition-expensive66"
regex = '''(a|ab|c|bcd)*(d*)'''
input = '''ababcd'''
captures = [[[0, 1], [0, 1], [1, 1]]]
match_limit = 1

# Test added by Rust regex project.
[[tests]]
name = "repetition-expensive68"
regex = '''(a|ab|c|bcd)+(d*)'''
input = '''ababcd'''
captures = [[[0, 1], [0, 1], [1, 1]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive74"
regex = '''(ab|a|c|bcd){0,}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive76"
regex = '''(ab|a|c|bcd){1,}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive78"
regex = '''(ab|a|c|bcd){2,}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive80"
regex = '''(ab|a|c|bcd){3,}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

[[tests]]
name = "repetition-expensive81"
regex = '''(ab|a|c|bcd){4,}(d*)'''
input = '''ababcd'''
captures = []
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive83"
regex = '''(ab|a|c|bcd){0,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive85"
regex = '''(ab|a|c|bcd){1,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive87"
regex = '''(ab|a|c|bcd){2,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive89"
regex = '''(ab|a|c|bcd){3,10}(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

[[tests]]
name = "repetition-expensive90"
regex = '''(ab|a|c|bcd){4,10}(d*)'''
input = '''ababcd'''
captures = []
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive92"
regex = '''(ab|a|c|bcd)*(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

# Test added by RE2/Go project.
[[tests]]
name = "repetition-expensive94"
regex = '''(ab|a|c|bcd)+(d*)'''
input = '''ababcd'''
captures = [[[0, 6], [4, 5], [5, 6]]]
match_limit = 1

