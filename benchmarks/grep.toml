[[benches]]
type = "grep"
name = "empty"
regex = ''
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = false
line-count = 239_963
engines = [
  'regex/api',
  'regex/automata/dense',
  'regex/automata/sparse',
  'regex/automata/hybrid',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regex/automata/onepass',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep"
name = "long-words-unicode"
regex = '\b\w{25,}\b'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = true
line-count = 5075
engines = [
  'regex/api',
  'regex/automata/pikevm',
  'regexold/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep"
name = "long-words-nounicode"
regex = '\b\w{25,}\b'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = false
line-count = 5073
engines = [
  'regex/api',
  'regex/automata/dense',
  'regex/automata/sparse',
  'regex/automata/hybrid',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep"
name = "bibleref"
# Sadly, not all regex engines support '(?x)', so we smush this monster into
# one line.
regex = '(?P<Book>(([1234]|I{1,4})[\t\f\pZ]*)?\pL+\.?)[\t\f\pZ]+(?P<Locations>((?P<Chapter>1?[0-9]?[0-9])(-(?P<ChapterEnd>\d+)|,\s*(?P<ChapterNext>\\d+))*(:\s*(?P<Verse>\d+))?(-(?P<VerseEnd>\d+)|,\s*(?P<VerseNext>\d+))*\s?)+)'
haystack-path = "opensubtitles/en-huge.txt"
case-insensitive = false
unicode = true
line-count = 161
engines = [
  'regex/api',
  'regex/automata/dense',
  'regex/automata/sparse',
  'regex/automata/hybrid',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "literal-star-variant1"
regex = '([*].)|(.[*])'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = false
line-count = 4_285
capture-count = 12_074
engines = [
  'regex/api',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "literal-star-variant2"
regex = '(\*.)|(.\*)'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = false
line-count = 4_285
capture-count = 12_074
engines = [
  'regex/api',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "literal-star-variant3"
regex = '([*][^\n*])|([^\n*][*])'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = false
line-count = 4_285
capture-count = 11_880
engines = [
  'regex/api',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "contiguous-letters"
regex = '(?:(a+)|(b+)|(c+)|(d+)|(e+)|(f+)|(g+)|(h+)|(i+)|(j+)|(k+)|(l+)|(m+)|(n+)|(o+)|(p+)|(q+)|(r+)|(s+)|(t+)|(u+)|(v+)|(w+)|(x+)|(y+)|(z+))'
haystack-path = "opensubtitles/en-medium.txt"
case-insensitive = false
unicode = false
line-count = 2_167
capture-count = 81_494
engines = [
  'regex/api',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "overlapping-words-unicode"
regex = '(\pL{10})|(\pL{9})|(\pL{8})|(\pL{7})|(\pL{6})|(\pL{5})'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = true
line-count = 129_089
capture-count = 673_588
engines = [
  # 'regex/api', # abysmally slow
  # 'regex/automata/backtrack', # haystack is too big
  'regex/automata/pikevm',
  # 'regexold/api', # abysmally slow
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "overlapping-words-russian"
regex = '(\pL{10})|(\pL{9})|(\pL{8})|(\pL{7})|(\pL{6})|(\pL{5})'
haystack-path = "opensubtitles/ru-medium.txt"
case-insensitive = false
unicode = true
line-count = 1_207
capture-count = 5_718
engines = [
  'regex/api',
  # 'regex/automata/backtrack', # haystack is too big
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'

[[benches]]
type = "grep-captures"
name = "overlapping-words-ascii"
regex = '([A-Za-z]{10})|([A-Za-z]{9})|([A-Za-z]{8})|([A-Za-z]{7})|([A-Za-z]{6})|([A-Za-z]{5})'
haystack-path = "rust-src-tools-3b0d4813.txt"
case-insensitive = false
unicode = true
line-count = 129_073
capture-count = 673_432
engines = [
  'regex/api',
  'regex/automata/backtrack',
  'regex/automata/pikevm',
  'regexold/api',
  're2/api',
  'pcre2/api/jit',
  'pcre2/api/nojit',
]
analysis = 'TODO'
